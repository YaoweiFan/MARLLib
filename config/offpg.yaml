# --- MARLLib options ---
runner: "parallel" # Runs 1 env for an episode
mac: "basic_mac" # Basic controller
env: "dualarmcontinuous" # Environment name
env_args: {} # Arguments for the environment
batch_size_run: 8 # Number of environments to run in parallel
test_n_episodes: 32 # Number of episodes to test for (最好是 batch_size_run 的倍数)
test_interval: 20000 # Test after {} timesteps have passed
test_greedy: False # Use greedy evaluation (if False, will set epsilon floor to 0
log_interval: 20000 # Log summary of stats after every {} timesteps
runner_log_interval: 20000 # Log runner stats (not test stats) every {} timesteps
learner_log_interval: 20000 # Log training stats every {} timesteps
t_max: 100050000 # Stop running after this many timesteps
use_cuda: True # Use gpu by default unless it isn't available
buffer_cpu_only: True # If true we won't keep all of the replay buffer in vram

# --- Logging options ---
use_tensorboard: True # Log results to tensorboard
save_model: True # Save the models to disk
save_model_interval: 2000000 # Save models after this many timesteps
checkpoint_path: "" # Load a checkpoint from this path
evaluate: False # Evaluate model for test_nepisode episodes and quit (no training)
load_step: 0 # Load model trained on this many timesteps (0 if choose max possible)
save_replay: False # Saving the replay of the model loaded from checkpoint_path
local_results_path: "results" # Path for local results

# --- RL hyperparameters ---
gamma: 0.99
on_batch_size: 16 # Number of episodes to train on
on_buffer_size: 32 # Size of the replay buffer
off_batch_size: 16  # Number of off-policy episodes to train on
off_buffer_size: 32 # size of the off-policy buffer
actor_learning_rate: 0.0005 # Learning rate for agents
critic_learning_rate: 0.0001 # Learning rate for critics
mixer_learning_rate: 0.0001 # Learning rate for mixer
optim_alpha: 0.99 # RMSProp alpha
optim_eps: 0.00001 # RMSProp epsilon
grad_norm_clip: 20 # Reduce magnitude of gradients above this L2 norm
target_update_interval: 1000 # update the target network every {} training steps
tree_backup_step: 5 # steps for tree back up diagram  (adjustable based on # of agents)
td_lambda: 0.8
tb_lambda: 0.93

# --- Agent parameters ---
agent: "rnn" # Default rnn agent
rnn_hidden_dim: 64 # Size of hidden state for default rnn agent
obs_agent_id: True # Include the agent's one_hot id in the observation
obs_last_action: True # Include the agent's last action (one_hot) in the observation

# --- Critic parameters ---
critic_hidden_dim: 256

# --- Experiment running params ---
repeat_id: 1
label: "default_label"

# --- COMA specific parameters ---
action_selector: "multinomial"
epsilon_start: .5
epsilon_finish: .05
epsilon_anneal_time: 500000
mask_before_softmax: False

# use qmix
mixing_embed_dim: 32

# use COMA
agent_output_type: "pi_logits"
learner: "offpg_learner"
critic_q_fn: "coma"
critic_baseline_fn: "coma"
critic_train_mode: "seq"
critic_train_reps: 1
q_nstep: 0  # 0 corresponds to default Q, 1 is r + gamma*Q, etc

# --- Normalizer ---
clip_obs: 10.0
clip_state: 10.0
epsilon: 0.00000001
use_running_normalize: True

name: "offpg_dualarm"

record_param: False  # record controller network or not

test: False  # test or train

log_std_init: 0.0  # gaussian 采样方差

soft_update_alpha: 0.01 # 软更新系数

actor_hidden_dim: 64